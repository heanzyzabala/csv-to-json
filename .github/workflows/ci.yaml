name: Build
on:
  push:
    branches:
      - '*'
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]

    steps:
      - uses: actions/checkout@v2

      - uses: hmarr/debug-action@v2

      - name: Setup Nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm i

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test

  push:
    needs: 'test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: rishabhgupta/split-by@v1
        id: split
        with:
          string: '${{ github.repository }}'
          split-by: '/'

      - name: Install dependencies
        run: npm i

      - name: Compile
        run: npm run compile

      - name: Build, tag, and push image to Amazon ECR
        id: docker
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.split.outputs._1 }}
          IMAGE_TAG: ${{ startsWith(github.ref, 'refs/tags') && github.ref_name || github.sha }}
        # For some reason $ECR_REGISTRY causes empty docker_image. Fix it later.
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=docker_image::$(echo $ECR_REPOSITORY:$IMAGE_TAG)"
    outputs:
      docker_image: ${{ steps.docker.outputs.docker_image }}
